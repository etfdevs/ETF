add_library(cgame MODULE
	"../api/shared/q_bit.c"
	"../api/shared/q_bit.h"
	"../api/shared/q_color.c"
	"../api/shared/q_color.h"
	"../api/shared/q_math.c"
	"../api/shared/q_math.h"
	"../api/shared/q_path.c"
	"../api/shared/q_path.h"
	"../api/shared/q_platform.h"
	"../api/shared/q_rand.c"
	"../api/shared/q_rand.h"
	"../api/shared/q_string.c"
	"../api/shared/q_string.h"
	"../api/et/q_shared.c"
	"../api/et/q_shared.h"
	"../game/bg_events.h"
	"../game/bg_mod.h"
	"../game/bg_local.h"
	"../game/bg_misc.c"
	"../game/bg_public.h"
	"../game/bg_pmove.c"
	"../game/bg_q3f_controllable.c"
	"../game/bg_q3f_controllable.h"
	"../game/bg_q3f_flyby.c"
	"../game/bg_q3f_flyby.h"
	"../game/bg_q3f_grenades.c"
	"../game/bg_q3f_grenades.h"
	"../game/bg_q3f_info.c"
	"../game/bg_q3f_playerclass.c"
	"../game/bg_q3f_playerclass.h"
	"../game/bg_q3f_splines.c"
	"../game/bg_q3f_util.c"
	"../game/bg_q3f_util.h"
	"../game/bg_q3f_weapon.c"
	"../game/bg_q3f_weapon.h"
	"../game/bg_slidemove.c"
	"../game/bg_tracemap.c"
	"cg_atmospheric.c"
	"cg_consolecmds.c"
	"cg_cvar.h"
	"cg_draw.c"
	"cg_drawtools.c"
	"cg_effects.c"
	"cg_ents.c"
	"cg_event.c"
	"cg_flamethrower.c"
	"cg_info.c"
	"cg_localents.c"
	"cg_main.c"
	"cg_local.h"
	"cg_marks.c"
	"cg_newdraw.c"
	"cg_players.c"
	"cg_playerstate.c"
	"cg_polybus.c"
	"cg_predict.c"
	"../api/et/cg_public.h"
	"cg_q3f_classutil.c"
	"cg_q3f_customshader.c"
	"cg_q3f_f2r.c"
	"cg_q3f_f2r.h"
	"cg_q3f_flare.c"
	"cg_q3f_flyby.c"
	"cg_q3f_flyby.h"
	"cg_q3f_grenades.c"
	"cg_q3f_grenades.h"
	"cg_q3f_init.c"
	"cg_q3f_mapinfo.c"
	"cg_q3f_mapselect.c"
	"cg_q3f_mapselect.h"
	"cg_q3f_mapsentry.c"
	"cg_q3f_menu.c"
	"cg_q3f_menu.h"
	"cg_q3f_panel.c"
	"cg_q3f_panel.h"
	"cg_q3f_rendereffects.c"
	"cg_q3f_scanner.c"
	"cg_q3f_scanner.h"
	"cg_q3f_scriptlib.c"
	"cg_q3f_scriptlib.h"
	"cg_q3f_sentry.c"
	"cg_q3f_sounddict.c"
	"cg_q3f_sounddict.h"
	"cg_q3f_spawn.c"
	"cg_q3f_spirit.c"
	"cg_q3f_spirit.h"
	"cg_q3f_trapcalls.c"
	"cg_q3f_usermenu.c"
	"cg_q3f_water.c"
	"cg_q3f_waypoint.c"
	"cg_scoreboard.c"
	"cg_servercmds.c"
	"cg_snapshot.c"
	"../api/et/cg_syscalls.c"
	"cg_trails.c"
	"cg_unlagged.c"
	"cg_view.c"
	"cg_weapons.c"
	"../ui_new/ui_shared.c"
	"../ui_new/ui_shared.h"
	"../../assets/ui/menudef.h"
)

if(USE_BOTS)
	target_sources(cgame PRIVATE cg_omnibot.c Omnibot_Interprocess.cpp Omnibot_Interprocess.h)
	target_compile_definitions(cgame PRIVATE BUILD_BOTS)
endif()

target_compile_definitions(cgame PRIVATE CGAME CGAMEDLL API_ET WOLF_FLAME)
target_link_libraries(cgame PRIVATE cxx_compiler_opts)

set_target_properties(cgame PROPERTIES
	LIBRARY_OUTPUT_DIRECTORY "${BASE_DIR_PATH}"
	LIBRARY_OUTPUT_DIRECTORY_DEBUG "${BASE_DIR_PATH}"
	LIBRARY_OUTPUT_DIRECTORY_RELEASE "${BASE_DIR_PATH}")
set_target_platform_details(cgame)

if (CMAKE_GENERATOR MATCHES "Visual Studio")
	set_target_properties(cgame PROPERTIES
			VS_DEBUGGER_COMMAND "${ET_PATH}\\${ET_EXE_NAME}"
			VS_DEBUGGER_COMMAND_ARGUMENTS "+set fs_basepath . +set fs_homepath \"${ET_PATH}\" +set fs_game ${CMAKE_PROJECT_NAME}"
			VS_DEBUGGER_WORKING_DIRECTORY "$(SolutionDir)"
	)
endif ()
